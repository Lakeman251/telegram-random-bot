
from flask import Flask, request
import telebot
import os
import random

TOKEN = os.environ.get('TELEGRAM_TOKEN')
bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ /—Ä–∞–Ω–¥–æ–º 1 100, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ.")

@bot.message_handler(commands=['—Ä–∞–Ω–¥–æ–º'])
def handle_random(message):
    try:
        parts = message.text.split()
        if len(parts) != 3:
            bot.reply_to(message, "–§–æ—Ä–º–∞—Ç: /—Ä–∞–Ω–¥–æ–º 1 100")
            return
        a, b = int(parts[1]), int(parts[2])
        result = random.randint(min(a, b), max(a, b))
        bot.reply_to(message, f"üé≤ –¢–≤–æ—ë —á–∏—Å–ª–æ: {result}")
    except:
        bot.reply_to(message, "–û—à–∏–±–∫–∞! –ò—Å–ø–æ–ª—å–∑—É–π —Ñ–æ—Ä–º–∞—Ç: /—Ä–∞–Ω–¥–æ–º 1 100")

# –ö–æ—Ä–æ—Ç–∫–∏–π –∞–ª–∏–∞—Å –¥–ª—è /—Ä–∞–Ω–¥–æ–º
@bot.message_handler(commands=['—Ä'])
def handle_short_random(message):
    handle_random(message)

# –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –¥–∏–∞–ø–∞–∑–æ–Ω–æ–º
@bot.message_handler(commands=['–∏–∑104'])
def handle_104(message):
    result = random.randint(1, 104)
    bot.reply_to(message, f"üéØ –¢–≤–æ—ë —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 104: {result}")

@bot.message_handler(commands=['–∏–∑4'])
def handle_4(message):
    result = random.randint(1, 4)
    bot.reply_to(message, f"üéØ –¢–≤–æ—ë —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 4: {result}")

@bot.message_handler(commands=['–∏–∑3'])
def handle_3(message):
    result = random.randint(1, 3)
    bot.reply_to(message, f"üéØ –¢–≤–æ—ë —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 3: {result}")

@bot.message_handler(commands=['–∏–∑2'])
def handle_2(message):
    result = random.randint(1, 2)
    bot.reply_to(message, f"üéØ –¢–≤–æ—ë —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 2: {result}")

@bot.message_handler(commands=['k'])
def handle_commands_list(message):
    text = (
        "üìã *–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:*\n"
        "/—Ä–∞–Ω–¥–æ–º A B ‚Äî —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç A –¥–æ B\n"
        "/—Ä A B ‚Äî —Ç–æ –∂–µ —Å–∞–º–æ–µ, –Ω–æ –∫–æ—Ä–æ—á–µ\n"
        "/–∏–∑104 ‚Äî —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 104\n"
        "/–∏–∑4 ‚Äî –æ—Ç 1 –¥–æ 4\n"
        "/–∏–∑3 ‚Äî –æ—Ç 1 –¥–æ 3\n"
        "/–∏–∑2 ‚Äî –æ—Ç 1 –¥–æ 2\n"
        "/k ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"
    )
    bot.reply_to(message, text, parse_mode='Markdown')

@app.route(f'/{TOKEN}', methods=['POST'])
def webhook():
    bot.process_new_updates([telebot.types.Update.de_json(request.stream.read().decode("utf-8"))])
    return '', 200

@app.route('/')
def index():
    return '–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!'

@app.before_request
def activate_webhook():
    info = bot.get_webhook_info()
    url = f'{os.environ.get("RENDER_EXTERNAL_URL")}/{TOKEN}'
    if info.url != url:
        bot.remove_webhook()
        bot.set_webhook(url=url)

if __name__ == '__main__':
    app.run(host="0.0.0.0", port=int(os.environ.get('PORT', 5000)))
